@using SSSEditor
@inherits PairListPageBase

<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=7" />
    <title>SSS Editor Demo Page</title>
    <script type="text/javascript">
        @Raw(PairListModel.JQuery)

        var icons = [@Raw(Model.iconsJSON)][0];

        $(function () {
            $("#pairDefinitions img.icon").each(function (i, e) {
                var iconId = parseInt($(e).parents(".stageRow").find(".iconIDDisplay").text(), 16);
                e.src = "data:image/png;base64," + icons[iconId];
            });

            if ("documentMode" in document) $("#documentMode").text(document.documentMode);

            $("input.iconID").change(function () {
                var iconId = +$(this).val();
                var str = iconId.toString(16);
                if (str.length == 1) str = "0" + str;
                $(this).parents(".stageRow").find(".iconIDDisplay").text(str);

                $(this).parents(".stageRow").find("img.icon").attr("src", "data:image/png;base64," + icons[iconId]);
            });

            $("input.stageID").change(function () {
                var stageId = +$(this).val();
                var str = stageId.toString(16);
                if (str.length == 1) str = "0" + str;
                $(this).parents(".stageRow").find(".stageIDDisplay").text(str);

                $(this).parents(".stageRow").find("select.stagename").val(stageId);
            });

            $("select.stagename").change(function () {
                var stageId = +$(this).val();
                var str = stageId.toString(16);
                if (str.length == 1) str = "0" + str;
                $(this).parents(".stageRow").find(".stageIDDisplay").text(str);

                $(this).parents(".stageRow").find("input.stageID").val(stageId);
            });

            $("input.up").click(function () {
                var row = $(this).parents(".stageRow");
                var previous = row.prev();

                if (previous.length > 0) {
                    var previousIndex = +previous.find("input.defIndex").val();
                    var index = +row.find("input.defIndex").val();
                    row.insertBefore(previous);
                    row.find(".indexDisplay").text(previousIndex);
                    row.find("input.defIndex").val(previousIndex);
                    previous.find(".indexDisplay").text(index);
                    previous.find("input.defIndex").val(index);
                }

                $(this).focus();
            });

            $("input.down").click(function () {
                var row = $(this).parents(".stageRow");
                var next = row.next();

                if (next.length > 0) {
                    var nextIndex = +next.find("input.defIndex").val();
                    var index = +row.find("input.defIndex").val();
                    row.insertAfter(next);
                    row.find(".indexDisplay").text(nextIndex);
                    row.find("input.defIndex").val(nextIndex);
                    next.find(".indexDisplay").text(index);
                    next.find("input.defIndex").val(index);
                }

                $(this).focus();
            });
        });
    </script>
    <style type="text/css">
        .stageRow {
            background-color: lightgray;
            border: 1px outset white;
            overflow: auto;
            margin-bottom: 8px;
            padding: 2px;

            font-family: Arial, Helvetica, sans-serif;
            font-size: 10pt;
            line-height: 26px;
        }

        .stageRow img.icon {
            float: left;
            margin-right: 2px;
        }

        .stageRow .indexDisplay {
            font-weight: bold;
        }

        .stageIDDisplay, .iconIDDisplay {
            font-family: monospace;
        }

        input.iconID, input.stageID, input.defIndex {
            width: 48px;
        }

        input.up, input.down {
            width: 22px;
            height: 22px;
        }
    </style>
</head>
<body>
    <div id="pairDefinitions">
        @{ int index = 0; }
        @foreach (ModelPair pair in Model.pairs) {
            <div class="stageRow" id="defOrig@(index)">
                <img width="64" height="56" class="icon" />
                <span class="indexDisplay">@index.</span>
                <select class="stagename">
                    @foreach (KeyValuePair<byte, string> kvpair in PairListModel.StagesByID) {
                        if (kvpair.Key == pair.stage) {
                            <option label="@kvpair.Value" value="@kvpair.Key" selected></option>
                        } else {
                            <option label="@kvpair.Value" value="@kvpair.Key"></option>
                        }
                    }
                </select>
                <br />
                <input class="defIndex" value="@index" disabled />
                <!--<input class="stageID" value="@pair.stage" type="number" />-->
                <span class="stageIDDisplay">@pair.stage.ToString("X2")</span>
                <span class="iconIDDisplay">@pair.icon.ToString("X2")</span>
                <input class="iconID" value="@pair.icon" type="number" />
                <input class="up" value="^" type="button" />
                <input class="down" value="v" type="button" />
            </div>
            index++;
        }
    </div>
    <p>
        Document mode: <span id="documentMode"></span>
    </p>
</body>
</html>